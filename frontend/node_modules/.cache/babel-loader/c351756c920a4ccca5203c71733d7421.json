{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\PycharmProjects\\\\12eyes\\\\12eyes_second_try\\\\frontend\\\\src\\\\components\\\\Feed\\\\postcard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { PostCardContainer, PostCardHeader, PostCardFooter, Like, Share, PostContent } from './style';\nimport like from \"../../../assets/logos_pictures_etc/svgs/heart.svg\";\nimport share from \"../../../assets/logos_pictures_etc/svgs/share.svg\";\nimport moment from 'moment';\nimport heartWhite from '../../../assets/logos_pictures_etc/heart-outline.png';\nimport heartPurple from '../../../assets/logos_pictures_etc/heart-purple.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostCard() {\n  _s();\n\n  const posts = useSelector(state => state.postsReducer.posts);\n\n  const likePost = id => {\n    const token = localStorage.getItem('token');\n    const url = `https://motion.propulsion-home.ch/backend/api/social/posts/toggle-like/${id}/`;\n    const config = {\n      method: 'POST',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`\n      })\n    };\n    fetch(url, config).then(res => res.json()).then(data => console.log(data));\n  };\n\n  return posts.map((element, index) => {\n    return /*#__PURE__*/_jsxDEV(PostCardContainer, {\n      children: [console.log(posts), /*#__PURE__*/_jsxDEV(PostCardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          height: \"30px\",\n          src: element.user.avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [`${element.user.first_name} ${element.user.last_name}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 77\n          }, this), moment(element.created).format('DD MMMM YYYY, hh:mm A')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: element.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), element.images.length ? element.images.map(img => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"100px\",\n            height: \"100px\",\n            alt: \"\",\n            src: img.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this);\n        }) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PostCardFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Like, {\n          children: [!element.logged_in_user_liked ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => likePost(element.id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: heartWhite,\n              alt: \"like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => likePost(element.id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: heartPurple,\n              alt: \"like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Share, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: share,\n            alt: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${element.amount_of_likes} likes`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(PostCard, \"6hBbuofx6pBPNuvOg59liqMeVP8=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/andri/PycharmProjects/12eyes/12eyes_second_try/frontend/src/components/Feed/postcard/index.jsx"],"names":["React","useSelector","PostCardContainer","PostCardHeader","PostCardFooter","Like","Share","PostContent","moment","heartWhite","heartPurple","PostCard","posts","state","postsReducer","likePost","id","token","localStorage","getItem","url","config","method","headers","Headers","fetch","then","res","json","data","console","log","map","element","index","user","avatar","first_name","last_name","created","format","content","images","length","img","image","logged_in_user_liked","share","amount_of_likes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { PostCardContainer, PostCardHeader, PostCardFooter,\r\nLike, Share, PostContent } from './style';\r\nimport like from '../../../assets/logos_pictures_etc/svgs/heart.svg';\r\nimport share from '../../../assets/logos_pictures_etc/svgs/share.svg';\r\nimport moment from 'moment';\r\nimport heartWhite from '../../../assets/logos_pictures_etc/heart-outline.png';\r\nimport heartPurple from '../../../assets/logos_pictures_etc/heart-purple.png';\r\n\r\nexport default function PostCard() {\r\n\r\n    const posts = useSelector(state => state.postsReducer.posts);\r\n    \r\n\r\n    const likePost = (id) => {\r\n        const token = localStorage.getItem('token')\r\n        const url = `https://motion.propulsion-home.ch/backend/api/social/posts/toggle-like/${id}/`\r\n        const config = {\r\n            method: 'POST',\r\n            headers: new Headers ({\r\n                'Authorization': `Bearer ${token}`\r\n            })\r\n        }\r\n        fetch(url, config).then(res => res.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n       posts.map((element, index) => {\r\n           return (\r\n            <PostCardContainer key={index}>\r\n            {console.log(posts)}\r\n            <PostCardHeader>\r\n                <img height='30px' src={element.user.avatar} alt='avatar'/>\r\n                <p>{`${element.user.first_name} ${element.user.last_name}`} <br/>\r\n                {moment( element.created ).format('DD MMMM YYYY, hh:mm A')}</p>\r\n                <p></p>\r\n            </PostCardHeader>\r\n            <PostContent>\r\n                <p>{element.content}</p>\r\n                {element.images.length ? element.images.map(img => {\r\n                    return (\r\n                        <img width='100px' height='100px' alt='' src={img.image}/>\r\n                    )\r\n                \r\n                }): null}\r\n            </PostContent>\r\n            <PostCardFooter>\r\n                <Like> \r\n                    {(!element.logged_in_user_liked) ? \r\n                <button onClick={() => likePost(element.id)}><img src={heartWhite} alt='like'/></button>\r\n                : <button \r\n                onClick={() => likePost(element.id)}>\r\n                    <img src={heartPurple} alt='like'/></button>}\r\n                    \r\n                    <p>Like</p>\r\n                </Like>\r\n                <Share>\r\n                    <img src={share} alt='share'/>\r\n                    <p>Share</p>\r\n                </Share>\r\n                <p>{`${element.amount_of_likes} likes`}</p>\r\n            </PostCardFooter>\r\n        </PostCardContainer>\r\n           )\r\n       })\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
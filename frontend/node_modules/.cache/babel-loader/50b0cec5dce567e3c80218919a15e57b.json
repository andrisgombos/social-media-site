{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\PycharmProjects\\\\12eyes\\\\12eyes_second_try\\\\frontend\\\\src\\\\components\\\\Feed\\\\newpost\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NewPostContainer, NewPostSend } from './style';\nimport alber from '../../../assets/logos_pictures_etc/images/users/alber.png';\nimport Modal from 'react-modal';\nimport sendButton from \"../../../assets/logos_pictures_etc/svgs/send_button.svg\";\nimport { listPostsAction } from '../../store/actions/listPostsAction';\nimport NewPostForm from '../../NewPostForm/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewPost() {\n  _s();\n\n  const [postContent, setPostContent] = useState({});\n  const token = localStorage.getItem('token');\n  const dispatch = useDispatch(); // const userName = useSelector(state => state.signInReducer.user.first_name)\n\n  const userNameLocal = localStorage.getItem('user');\n\n  const newPostHandler = event => {\n    event.preventDefault();\n    console.log('post content:', postContent);\n    const url = \"https://motion.propulsion-home.ch/backend/api/social/posts/\";\n    const content = {\n      content: postContent\n    };\n    const config = {\n      method: \"POST\",\n      body: JSON.stringify(content),\n      headers: new Headers({\n        \"Authorization\": `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    fetch(url, config).then(res => res.json()).then(data => console.log(data));\n    dispatch(listPostsAction());\n  };\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const setModalIsOpenToTrue = () => {\n    setModalIsOpen(true);\n  };\n\n  const setModalIsOpenToFalse = () => {\n    setModalIsOpen(false);\n  };\n\n  const customStyles = {\n    content: {\n      marginTop: '180px',\n      marginLeft: '130px',\n      height: '400px',\n      width: '600px',\n      backgroundColor: \"white\"\n    },\n    overlay: {\n      backgroundColor: \"rgba(0,0,0,0.8)\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewPostContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: alber,\n        alt: \"avatar\",\n        onClick: setModalIsOpenToTrue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setPostContent(e.target.value) // value=''\n        ,\n        placeholder: `What's on your mind, ${userNameLocal}?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewPostSend, {\n        onClick: newPostHandler,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendButton,\n          alt: \"send button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      style: customStyles,\n      onRequestClose: () => setModalIsOpen(false),\n      children: /*#__PURE__*/_jsxDEV(NewPostForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewPost, \"aCNCR07pPEfQza6J6OMsAqwsAcY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["C:/Users/andri/PycharmProjects/12eyes/12eyes_second_try/frontend/src/components/Feed/newpost/index.jsx"],"names":["React","useState","useDispatch","NewPostContainer","NewPostSend","alber","Modal","listPostsAction","NewPostForm","NewPost","postContent","setPostContent","token","localStorage","getItem","dispatch","userNameLocal","newPostHandler","event","preventDefault","console","log","url","content","config","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","data","modalIsOpen","setModalIsOpen","setModalIsOpenToTrue","setModalIsOpenToFalse","customStyles","marginTop","marginLeft","height","width","backgroundColor","overlay","e","target","value","sendButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport {NewPostContainer, NewPostSend} from './style';\r\nimport alber from '../../../assets/logos_pictures_etc/images/users/alber.png';\r\nimport Modal from 'react-modal';\r\nimport sendButton from '../../../assets/logos_pictures_etc/svgs/send_button.svg';\r\nimport {listPostsAction} from '../../store/actions/listPostsAction';\r\nimport NewPostForm from '../../NewPostForm/'\r\n\r\n\r\nexport default function NewPost() {\r\n\r\n    const [postContent, setPostContent] = useState({});\r\n    const token = localStorage.getItem('token');\r\n    const dispatch = useDispatch();\r\n    // const userName = useSelector(state => state.signInReducer.user.first_name)\r\n    const userNameLocal = localStorage.getItem('user')\r\n\r\n    const newPostHandler = (event) =>  {\r\n        event.preventDefault();\r\n        console.log('post content:', postContent);\r\n        const url = \"https://motion.propulsion-home.ch/backend/api/social/posts/\";\r\n        const content = {content: postContent}\r\n        const config = {\r\n            method: \"POST\",\r\n            body: JSON.stringify(content),\r\n            headers: new Headers ({\r\n                \"Authorization\": `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        }\r\n        fetch(url, config)\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n\r\n        dispatch(listPostsAction());\r\n    }\r\n\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const setModalIsOpenToTrue =()=>{\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    const setModalIsOpenToFalse =()=>{\r\n        setModalIsOpen(false)\r\n    }\r\n\r\n    const customStyles = {\r\n        content : {\r\n            marginTop: '180px',\r\n            marginLeft: '130px',\r\n            height: '400px',\r\n            width: '600px',\r\n            backgroundColor: \"white\"\r\n        },\r\n\r\n        overlay : {\r\n            backgroundColor: \"rgba(0,0,0,0.8)\"\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <NewPostContainer>\r\n            <img src={alber} alt='avatar'  onClick={setModalIsOpenToTrue}/>\r\n            <input\r\n            type='text'\r\n            onChange={(e) => setPostContent(e.target.value)}\r\n            // value=''\r\n            placeholder={`What's on your mind, ${userNameLocal}?`}  />\r\n            <NewPostSend onClick={newPostHandler}><img src={sendButton} alt='send button' /></NewPostSend>\r\n        </NewPostContainer>\r\n        <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={()=> setModalIsOpen(false)}>\r\n        {/* <button onClick={setModalIsOpenToFalse}>x</button> */}\r\n            <NewPostForm>\r\n                \r\n            </NewPostForm>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}